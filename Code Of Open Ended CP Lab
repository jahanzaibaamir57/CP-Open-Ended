#include <iostream>
#include <string>
using namespace std;
struct Book
{
	string title;
	string author;
	int publication_year;
	string genre;
};
Book books[6];
void input_details(Book books[6])
{
	for (int i = 0; i < 6; i++)
	{
		cout << "Enter book title " << i + 1 << ": ";
		getline(cin, books[i].title);
		cout << "Enter name of author book " << i + 1 << ": ";
		getline(cin, books[i].author);
		cout << "Enter publication year of Book " << i + 1 << ": ";
		cin >> books[i].publication_year;
		cin.ignore();
		cout << "Enter genre (Fiction / Non-Fiction) of Book " << i + 1 << ": ";
		getline(cin, books[i].genre);
		cout << endl << endl;
	}
}
void DisplayAllBooks(const Book arr[], int size)
{
	cout << "All Books Information:" << endl;
	for (int i = 0; i < size; i++)
	{
		cout << "Title: " << arr[i].title << endl <<"  Author: " << arr[i].author <<endl << "  Publication Year: " <<
			arr[i].publication_year << endl << "  Genre: " << arr[i].genre << endl;
	}
}
void Category()
{
	string fiction[6];
	string non_fiction[6];
	for (int i = 0; i < 6; i++)
	{
		if (books[i].genre == "Fiction")
		{
			fiction[i] = books[i].title;
		}
		else if (books[i].genre == "Non-Fiction")
		{
			non_fiction[i] = books[i].title;
		}
	}
	cout << "Fiction Books are:" << endl;
	for (int i = 0; i < 6; i++)
	{
		if (!fiction[i].empty())
		{
			cout << fiction[i] << endl;
		}
		cout << endl;
	}
	cout << "Non-Fiction Books are:" << endl;
	for (int i = 0; i < 6; i++)
	{
		if (!non_fiction[i].empty())
		{
			cout << non_fiction[i] << endl;
		}
	}
}
void FindEarliestPublication(Book arr[], int size)
{
	int EarliestIndex = 0;
	for (int i = 1; i < size; i++)
	{
		if (arr[i].publication_year < arr[EarliestIndex].publication_year)
		{
			EarliestIndex = i;
		}
	}
	cout << "Book with the earliest publication year:\n";
	cout << "Title: " << arr[EarliestIndex].title << ", Author: " << arr[EarliestIndex].author 
		 << ", Publication Year : "<<arr[EarliestIndex].publication_year << ", Genre : "
		 << arr[EarliestIndex].genre << endl;
}
int main()
{
	input_details(books);
	DisplayAllBooks(books, 6);
	Category();
	FindEarliestPublication(books, 6);
	return 0;
	system("[pause");
}
